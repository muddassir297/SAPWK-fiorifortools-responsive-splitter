<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>smartfilterbar/ControlConfiguration</name>
    <derived/>
    <documentation>ControlConfiguration can be used to add additional configuration for filter fields in the SmartFilterBar control, in order to overwrite
       the default settings from the OData metadata. For instance, it is possible to change the label, index or control type of a filter field.</documentation>
    <baseType>sap.ui.core/Element</baseType>
    <properties>
        <property group="Misc" type="sap.ui.core/string" name="key">
            <documentation>The key property corresponds to the field name from the OData service $metadata document.</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/string" name="groupId">
            <documentation>The groupId can be used to move a field from one group to another. The groupId corresponds to the EntityName from the OData
metadata. It is also possible to move a field from the advanced area to the basic area by specifying the groupId _BASIC.</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/string" name="label">
            <documentation>Using this property it is possible to overwrite the label of a filter field in the SmartFilterBar.</documentation>
        </property>
        <property group="Misc" defaultValue="true" type="sap.ui.core/boolean" name="visible">
            <documentation>Using this flag it is possible to hide fields from the OData metadata.</documentation>
        </property>
        <property group="Misc" defaultValue="true" type="sap.ui.core/boolean" name="hasValueHelpDialog">
            <documentation>Specifies whether a value help dialog is available or not.</documentation>
        </property>
        <property group="Misc" defaultValue="auto" type="sap.ui.comp/smartfilterbar/ControlType" name="controlType">
            <documentation>The SmartFilterBar calculates which kind of control will be used for a filter fields based on multiple OData Attributes and
annotations. Using this property it is possible to overwrite the OData metadata.</documentation>
        </property>
        <property group="Misc" defaultValue="auto" type="sap.ui.comp/smartfilterbar/FilterType" name="filterType">
            <documentation>The filter type specifies whether the filter fields is e.g. type single value, multi-value,or interval. The filter type is being
calculated by the martFilterBar based on the OData metadata. Using this property the filter type can be configured manually.</documentation>
        </property>
        <property group="Misc" defaultValue="-1" type="sap.ui.core/int" name="index">
            <documentation>The zero based index can be used to specify the initial order of fields (without any variants).</documentation>
        </property>
        <property group="Misc" defaultValue="true" type="sap.ui.core/boolean" name="hasTypeAhead">
            <documentation>Property can be used to enable the TypeAhead service. TypeAhead does not work with all controls, e.g it does not work for
DrodDownListbox</documentation>
        </property>
        <property group="Misc" defaultValue="auto" type="sap.ui.comp/smartfilterbar/MandatoryType" name="mandatory">
            <documentation>Property can be used to overwrite the mandatory state of a filter field. Property can only be set during initialization. Changes at
runtime will be ignored.</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/string" name="width">
            <documentation>The width of the filter field in a CSS compatible format. The width can be set only once during initialization. Changes at runtime
will not be reflected. The width will not be applied to custom controls.</documentation>
        </property>
        <property group="Misc" defaultValue="false" type="sap.ui.core/boolean" name="visibleInAdvancedArea">
            <documentation>If set to true this field will be added to the advanced area (aka. Dynamic Selection) by default.</documentation>
        </property>
        <property group="Misc" defaultValue="true" type="sap.ui.core/boolean" name="preventInitialDataFetchInValueHelpDialog">
            <documentation>In case there are value help annotations for this filter field, it is possible to specify whether the table in the value help
dialog for this field will be filled initially. The default value is false, which means the table will be filled as the data fetch
is not being prevented.</documentation>
        </property>
        <property group="Misc" defaultValue="auto" type="sap.ui.comp/smartfilterbar/DisplayBehaviour" name="displayBehaviour">
            <documentation>The displayBehaviour specifies how the content should be displayed on certain controls. Ex: DescriptionOnly for Combobox (DropDown
text) , Description and ID for MultiInput (token text)</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/any" name="conditionType">
            <documentation>The condition Type class name to use for this filter item. Implementation should derive from sap.ui.comp.config.condition.Type</documentation>
        </property>
    </properties>
    <events>
        <event allowPreventDefault="false" name="change">
            <documentation>Fired when the value of a property, for example isVisible, has changed.</documentation>
            <parameters>
                <parameter type="sap.ui.core/string" name="propertyName">
                    <documentation>Name of the changed property</documentation>
                </parameter>
            </parameters>
        </event>
    </events>
    <aggregations>
        <aggregation cardinality="0..n" type="sap.ui.comp/smartfilterbar/SelectOption" name="defaultFilterValues">
            <documentation>Default value for a filter field.</documentation>
        </aggregation>
        <aggregation cardinality="0..1" type="sap.ui.core/Control" name="customControl">
            <documentation>If a custom control is specified, the SmartFilterBar will not create a control but use the custom control. Additional services
like TypeAhead have to implemented manually.</documentation>
        </aggregation>
    </aggregations>
</control>
