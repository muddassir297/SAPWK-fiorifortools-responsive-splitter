<core:FragmentDefinition
	xmlns:build="sap.build"
	xmlns:core="sap.ui.core"
	xmlns:lib="sap.ovp.cards.map.GeographicalMap"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns="sap.m"
	xmlns:vbm="sap.ui.vbm"
	xmlns:ovp="sap.ovp.ui">
	<!--Show Map -->
	<template:with path="entityType>com.sap.vocabularies.UI.v1.HeaderInfo" var="header">

		<template:with path="ovpCardProperties>/geoLocationAnnotationPath"
		helper="sap.ovp.cards.AnnotationHelper.resolveEntityTypePath" var="geoLocation">
			<template:with path="ovpCardProperties>/dataPointAnnotationPath"
		helper="sap.ovp.cards.AnnotationHelper.resolveEntityTypePath" var="dataPoint">
			<template:if test="{entitySet>name}">
				<vbm:GeoMap id="oVBI" class="ovpImageContainer" width="100%"
					disableZoom="true" disablePan="true">
					<vbm:Spots
						id="Spots"
						items="{= ${entitySet>name} ? '{/' + ${entitySet>name} + '}' : '' }">
						<vbm:Spot
							id="Spot"
							click="onClickSpot"
							type="{path: 'dataPoint>', formatter: 'sap.ovp.cards.AnnotationHelper.criticalityType'}"
							labelType="{path: 'dataPoint>', formatter: 'sap.ovp.cards.AnnotationHelper.criticalityType'}"
							position="{path: 'geoLocation>', formatter: 'sap.ovp.cards.AnnotationHelper.formatterGeo'} "
							labelPos="1"
							labelText="{= ${header>Title/Value} ? ${path: 'header>Title/Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'} :  '' }" />
					</vbm:Spots>
				</vbm:GeoMap>

				<Popover
				id="quickViewPopover"
				offsetX="{popover>/offsetX}"
				offsetY="{popover>/offsetY}" 
				placement="sap.m.PlacementType.Auto">
					<customHeader>
						<VBox
							id="popoverHeader"
							class="{= ${ovpCardProperties>/category} || ${ovpCardProperties>/title} || ${ovpCardProperties>/subTitle} ? 'sapOvpCardHeader' : 'sapOvpCardHeader sapOvpCardHideHeader' } {= ${ovpCardProperties>/contentFragment} === 'sap.ovp.cards.stack.Stack' ? 'sapOvpStackCardHeader' :  'sapOvpCardHeaderBorder'} mapQuickViewHeader"
							build:metadata="#pattern:GenericCard;isAbstract;prop::EntitySet:\{ovpCardProperties>/entitySet\}">
							<customData>
								<ovp:CustomData key="tabindex" value="0" writeToDom="true"/>
								<ovp:CustomData key="role" value="button" writeToDom="true"/>
								<ovp:CustomData key="aria-label" value="." writeToDom="true"/>
							</customData>
							<!--
								For a Quickview card, the header is in the format "TypeName: Title".
								TypeName is set in stack.controller and is hardcoded in the annotations.
								Title comes from the data. Path to Title comes from annotation HeaderInfo/Title/Value.
							-->
							<Text id="ovpQuickviewCardHeader"
									text="{= ${path: 'header>TypeName', formatter: 'sap.ui.model.odata.AnnotationHelper.format'} + ': ' + ${path: 'header>Title/Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}}"
									class="sapOvpCardTitle tabindex-1 mapQuickViewHeaderText"
									build:metadata="#pattern:GenericCard;prop:text:Title">
								<customData>
									<ovp:CustomData key="aria-label" value="{= ${ovpCardProperties>/title} + ': ' + ${path: 'header>Title/Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}}" writeToDom="true"/>
									<ovp:CustomData key="role" value="heading" writeToDom="true"/>
								</customData>
							</Text>

							<!--
								   *********** SubTitle *************
							-->
							<template:if test="{= ${ovpCardProperties>/footerFragment} !== 'sap.ovp.cards.loading.LoadingFooter'}">

								<template:if test="{ovpCardProperties>/dynamicSubtitleAnnotationPath}">
									<template:then>
										<template:with path='ovpCardProperties>/dynamicSubtitleAnnotationPath'
													helper="sap.ovp.cards.AnnotationHelper.resolveEntityTypePath"
													var='headerInfo'>
											<template:if test="{headerInfo>Description}">
											<HBox>
												<FlexBox items="{parts:[{path:'entitySet>'}, {path:'headerInfo>'}], formatter: 'sap.ovp.cards.AnnotationHelper.getAggregateNumber'}"
													class="sapOvpCardSubtitleContainer ovpHeaderContainer">
												<Text
														text="{path: 'headerInfo>Description/Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
														class="sapOvpCardSubtitle tabindex-1"
														build:metadata="#pattern:GenericCard;prop:text:subTitle">
													<customData>
														<ovp:CustomData key="aria-label"
																		value="{path: 'headerInfo>Description/Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
																		writeToDom="true"/>
														<ovp:CustomData key="role" value="heading" writeToDom="true"/>
													</customData>
												</Text>
												</FlexBox>
											</HBox>
											</template:if>
										</template:with>
									</template:then>
								<template:else>

									<template:if test="{ovpCardProperties>/dataPointAnnotationPath}">
										<template:then>
											<template:with path="ovpCardProperties>/dataPointAnnotationPath"
														   helper="sap.ovp.cards.AnnotationHelper.resolveEntityTypePath"
														   var='dataPoint'>
												<template:if test="{dataPoint>Value/Path}">
													<template:with path="ovpCardProperties>/selectionAnnotationPath"
																   helper="sap.ovp.cards.AnnotationHelper.resolveEntityTypePath"
																   var='selVar'>
														<HBox>
															<FlexBox
																	items="{parts:[{path:'entitySet>'}, {path:'dataPoint>'}, {path:'selVar>'}], formatter: 'sap.ovp.cards.AnnotationHelper.getAggregateNumber'}"
																	class="sapOvpCardSubtitleContainer ovpHeaderContainer">
																<Text
																		text="{parts:[{path:'dataPoint>'}, {path:'ovpCardProperties>/subTitle'}], formatter: 'sap.ovp.cards.AnnotationHelper.formThePathForSubtitle'}"
																		class="sapOvpCardSubtitle tabindex-1"
																		build:metadata="#pattern:GenericCard;prop:text:subTitle">
																	<customData>
																		<ovp:CustomData key="aria-label"
																						value="{parts:[{path:'dataPoint>'}, {path:'ovpCardProperties>/subTitle'}], formatter: 'sap.ovp.cards.AnnotationHelper.formThePathForSubtitle'}"
																						writeToDom="true"/>
																		<ovp:CustomData key="role" value="heading" writeToDom="true"/>
																	</customData>
																</Text>
															</FlexBox>
														</HBox>
													</template:with>
												</template:if>
											</template:with>
										</template:then>
										<template:else>
											<template:if test="{ovpCardProperties>/subTitle}">
											<HBox>
												<FlexBox class="sapOvpCardSubtitleContainer ovpHeaderContainer">
													<Text
														text="{ovpCardProperties>/subTitle}"
														class="sapOvpCardSubtitle tabindex-1"
														build:metadata="#pattern:GenericCard;prop:text:subTitle">
														<customData>
															<ovp:CustomData
																key="aria-label" value="{ovpCardProperties>/subTitle}"
																writeToDom="true"/>
															<ovp:CustomData
																key="role"
																value="heading"
																writeToDom="true"/>
														</customData>
													</Text>
												</FlexBox>
											</HBox>
											</template:if>
										</template:else>
									</template:if>
									</template:else>
								</template:if>
							</template:if>

							<template:if test="{ovpCardProperties>/headerExtensionFragment}">
								<core:Fragment fragmentName="{ovpCardProperties>/headerExtensionFragment}" type="XML"/>
							</template:if>

						</VBox>
					</customHeader>
					<core:Fragment fragmentName="sap.ovp.cards.quickview.Quickview" type="XML"/>

					<!--
						Footer area of the popover where the action buttons are
					-->
					<footer>
						<core:Fragment fragmentName="sap.ovp.cards.generic.ActionsFooter" type="XML"/>
					</footer>
				</Popover>

		</template:if>
		</template:with>
	</template:with>
	</template:with>
</core:FragmentDefinition>